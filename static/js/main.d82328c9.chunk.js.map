{"version":3,"sources":["components/CitySelect/styles.tsx","components/CitySelect/index.tsx","components/WeatherCard/styles.tsx","components/WeatherCard/index.tsx","components/styles.tsx","components/WeatherBlockOnSevenDays/styles.tsx","api/index.ts","redux/mainPage/actions.ts","images/placeholder-icon.svg","components/WeatherBlockOnSevenDays/index.tsx","components/Input/styles.tsx","components/Input/index.tsx","components/WeatherBlockOfThePast/styles.tsx","components/WeatherBlockOfThePast/index.tsx","pages/MainPage/styles.tsx","pages/MainPage/index.tsx","images/background-bottom.png","images/background-top.png","styles.tsx","App.tsx","redux/mainPage/reducer.ts","redux/store.tsx","index.tsx"],"names":["Select","styled","select","isCitySelected","Option","option","CitySelect","city","selectCity","value","onChange","placeholder","defaultValue","disabled","WeatherCardInner","div","width","Date","Icon","img","heightIcon","Degrees","WeatherCard","date","temp","icon","unix","format","src","WeatherBlock","WeatherTitle","h1","EmptyWeatherBlock","EmptyWeatherIcon","EmptyWeatherPlaceholder","p","WeatherContentWrapper","ArrowControlLeft","button","ArrowControlRight","getWeather","a","axios","get","data","daily","getWeatherOfDay","current","GET_WEATHER","CHANGE_WEATHER_TO_DISPLAY","GET_WEATHER_OF_DAY","getWeatherAC","weatherForSevenDays","weatherToDisplay","type","getWeatherOfDayAC","connect","state","mainPage","thunkGetWeather","isMobile","dispatch","getState","then","res","day","formattedDay","dt","Math","round","weather","push","filter","item","index","changeWeatherToDisplayAC","useState","position","setPosition","setCity","useMediaQuery","useEffect","changeDisplayWeather","disabledBtnOnDesctop","disabledBtnOnMobile","undefined","event","target","onClick","map","placeholderIcon","Input","input","DateInput","selectDate","startOfAllowedDate","moment","add","endOfAllowedDate","onKeyDown","min","max","required","WeatherSelectBlock","weatherOfDay","thunkGetWeatherOfDay","setDate","dateFromInput","getTime","alert","PageContainer","PageTitle","header","PageTitleWord","props","lineHeight","textAlign","WeatherBlocksWrapper","PageFooter","footer","MainPage","Container","backgroundBottom","backgroundTop","App","defaultState","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","Global","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d82328c9.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Select = styled.select<{ isCitySelected: boolean }>`\n  display: block;\n  color:${({ isCitySelected }) => isCitySelected ? '#2C2D76' : '#8083A4'};\n  font-size: 16px;\n  height: 48px;\n  padding: 13px 34px 13px 10px;\n  margin-left: 4px;\n  width: 251px;\n  max-width: 100%;\n  border: 2px solid rgba(128, 131, 164, 0.2);\n  border-radius: 8px;\n  outline: none;\n  background: rgba(128, 131, 164, 0.06);\n  transition: background-color 0.7s ease;\n  &:hover {\n    cursor: pointer;\n    border: 2px solid #8083A4;\n  }\n  &:active {\n    border: 2px solid #373AF5;\n  }\n  @media ${'(max-width: 730px)'} {\n    margin-left: 0px;\n    width: 100%;\n  }\n`\n\nexport const Option = styled.option`\n  color:#2C2D76;\n  background-color: #fff;\n  border-radius: 5px;\n`\n","import React from 'react'\nimport { Select, Option } from './styles'\nimport { ICitySelect } from '../../types'\n\nexport const CitySelect: React.FC<ICitySelect> = ({ city, selectCity, isCitySelected }) => {\n  return (\n    <Select value={city} onChange={selectCity} placeholder=\"Select city\" defaultValue='Select city' isCitySelected={isCitySelected}>\n      <Option disabled>Select city</Option>\n      <Option value=\"lat=53.19&lon=50.10\">Samara</Option>\n      <Option value=\"lat=53.50&lon=49.42\">Toliatty</Option>\n      <Option value=\"lat=51.53&lon=46.03\">Saratov</Option>\n      <Option value=\"lat=55.79&lon=49.10\">Kazan</Option>\n      <Option value=\"lat=45.03&lon=38.97\">Krasnodar</Option>\n    </Select>\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherCardInner = styled.div<{ width: string }>`\n  background-color: #373AF5;\n  border-radius: 6px;\n  width: ${({ width }) => width};\n  height: 237px;\n  padding: 20px 21px 24px 19px;\n  margin: 0px 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-top: 55px;\n  @media ${'(max-width: 730px)'} {\n    width: 100%;\n    margin: 30px 0px 0px 0px;\n  }\n`\n\nexport const Date = styled.div`\n  font-weight: 700;\n`\n\nexport const Icon = styled.img<{ heightIcon: string }>`\n  height: ${({ heightIcon }) => heightIcon};\n  align-self: center;\n`\n\nexport const Degrees = styled.div`\n  font-size: 32px;\n  font-weight: 700;\n  align-self: flex-end;\n`\n","import React, { FC } from 'react'\nimport Moment from 'react-moment'\nimport 'moment-timezone'\nimport { WeatherCardInner, Date, Degrees, Icon } from './styles'\nimport { IWeatherCard } from '../../types'\n\nexport const WeatherCard: FC<IWeatherCard> = ({ date, temp, icon, width, heightIcon }) => {\n  return (\n    <WeatherCardInner width={width}>\n      <Date><Moment unix format=\"D MMM YYYY\">{date}</Moment></Date>\n      <Icon heightIcon={heightIcon} src={`http://openweathermap.org/img/wn/${icon}.png`} />\n      <Degrees>+{temp}°</Degrees>\n    </WeatherCardInner>\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherBlock = styled.div`\n  width: 660px;\n  height: 524px;\n  padding: 54px 54px;\n  background: #fff;\n  box-shadow: 0px 4px 4px rgba(4, 5, 73, 0.25), 14px 14px 20px rgba(5, 6, 114, 0.2);\n  border-radius: 8px;\n  @media ${'(max-width: 1470px)'} {\n    margin-bottom: 34px;\n  }\n  @media ${'(max-width: 730px)'} {\n    width: 100%;\n    padding: 32px 54px 60px 54px;\n    height: auto;\n  }\n`\n\nexport const WeatherTitle = styled.h1`\n  margin-bottom: 36px;\n  margin-left: 4px;\n  color: #2C2D76;\n  font-weight: bold;\n  font-size: 32px;\n  @media ${'(max-width: 730px)'} {\n    margin-left: 0px;\n    line-height: 32px;\n  }\n  @media ${'(max-width: 390px)'} {\n    margin-left: 0px;\n    line-height: 32px;\n    font-size: 25px;\n  }\n`\n\nexport const EmptyWeatherBlock = styled.div`\n  font-weight: bold;\n  text-align: center;\n  margin-top: 60px;\n`\n\nexport const EmptyWeatherIcon = styled.img`\n  margin-bottom: 22px;\n`\n\nexport const EmptyWeatherPlaceholder = styled.p`\n  color:#8083A4;\n`\n","import styled from 'styled-components'\n\nexport const WeatherContentWrapper = styled.div`\n  display: flex;\n`\n\nexport const ArrowControlLeft = styled.button`\n  position: relative;\n  top: -7px;\n  left: -33px;\n  border: none;\n  outline: none;\n  opacity: 0.6;\n  &:hover {\n      cursor: pointer;\n      opacity: 1;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    display: block;\n    border-right: solid 2px #8083A4;\n    border-top: solid 2px #8083A4;\n    width: 10px;\n    height: 10px;\n    transform: translate(12px, 0px) rotate(-135deg);\n  }\n`\n\nexport const ArrowControlRight = styled.button`\n  position: relative;\n  top: -7px;\n  right: 1px;\n  border: none;\n  outline: none;\n  opacity: 0.6;\n  &:hover {\n      cursor: pointer;\n      opacity: 1;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    display: block;\n    border-right: solid 2px #8083A4;\n    border-top: solid 2px #8083A4;\n    width: 10px;\n    height: 10px;\n    transform: translate(8px, 0px) rotate(45deg);\n  }\n`\n","import axios from 'axios'\n\nexport const getWeather = async (city: string) => {\n  const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?${city}&exclude=current,minutely,hourly,alerts&units=metric&appid=04160438ae6d577745ad287cda3d9bca`)\n\n  return data.daily\n}\n\nexport const getWeatherOfDay = async (city: string, date: string) => {\n  const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/onecall/timemachine?${city}&dt=${date}&units=metric&appid=04160438ae6d577745ad287cda3d9bca`)\n\n  return data.current\n}\n","import { Dispatch } from 'react'\nimport { getWeather, getWeatherOfDay } from '../../api/index'\nimport { AppStateType } from '../store'\nimport { IWeatherToDisplay, IWeatherOfDay, IWeather } from '../../types'\n\nexport const GET_WEATHER = 'GET_WEATHER'\nexport const CHANGE_WEATHER_TO_DISPLAY = 'CHANGE_WEATHER_TO_DISPLAY'\nexport const GET_WEATHER_OF_DAY = 'GET_WEATHER_OF_DAY'\n\nexport const thunkGetWeather = (city: string, isMobile: boolean) => (dispatch: Dispatch<ActionsTypes>, getState: () => AppStateType) => {\n  getWeather(city).then(res => {\n    const weatherForSevenDays: Array<IWeatherToDisplay> = []\n\n    for (const day of res) {\n      const formattedDay = {\n        date: day.dt,\n        temp: Math.round(day.temp.day),\n        icon: day.weather[0].icon\n      }\n\n      weatherForSevenDays.push(formattedDay)\n    }\n\n    let weatherToDisplay: Array<IWeatherToDisplay> = []\n\n    if (!isMobile) {\n      weatherToDisplay = weatherForSevenDays.filter((item: IWeatherToDisplay, index: number) => index < 3)\n    }\n\n    if (isMobile) {\n      weatherToDisplay = [weatherForSevenDays[0]]\n    }\n\n    dispatch(getWeatherAC({ weatherForSevenDays, weatherToDisplay }))\n  })\n}\n\ninterface IgetWeatherAC {\n  type: typeof GET_WEATHER\n  weatherForSevenDays: Array<IWeatherToDisplay>\n  weatherToDisplay: Array<IWeatherToDisplay>\n}\n\nexport const getWeatherAC = ({ weatherForSevenDays, weatherToDisplay }: IWeather): IgetWeatherAC => ({\n  type: GET_WEATHER,\n  weatherForSevenDays,\n  weatherToDisplay\n})\n\n// --------------------------------------------------------------------------------------------\n\ninterface IChangeWeatherToDisplayAC {\n  type: typeof CHANGE_WEATHER_TO_DISPLAY\n  weatherToDisplay: Array<IWeatherToDisplay>\n}\n\nexport const changeWeatherToDisplayAC = (weatherToDisplay: Array<IWeatherToDisplay>): IChangeWeatherToDisplayAC => ({\n  type: CHANGE_WEATHER_TO_DISPLAY,\n  weatherToDisplay\n})\n\n// --------------------------------------------------------------------------------------------\n\nexport const thunkGetWeatherOfDay = (city: string, date: string) => (dispatch: Dispatch<ActionsTypes>, getState: () => AppStateType) => {\n  getWeatherOfDay(city, date).then(res => {\n    const temp: number = Math.round(res.temp)\n    const icon: string = res.weather[0].icon\n\n    dispatch(getWeatherOfDayAC({ temp, icon }))\n  })\n}\n\nexport interface IGetWeatherOfDayAC {\n  type: typeof GET_WEATHER_OF_DAY\n  temp: number\n  icon: string\n}\n\nexport const getWeatherOfDayAC = ({ temp, icon }: IWeatherOfDay): IGetWeatherOfDayAC => ({\n  type: GET_WEATHER_OF_DAY,\n  temp,\n  icon\n})\n\n// --------------------------------------------------------------------------------------------\n\ntype ActionsTypes = IGetWeatherOfDayAC | IChangeWeatherToDisplayAC | IgetWeatherAC\n","export default __webpack_public_path__ + \"static/media/placeholder-icon.1a743710.svg\";","import React, { FC, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useMediaQuery } from 'beautiful-react-hooks'\nimport { CitySelect } from '../CitySelect'\nimport { WeatherCard } from '../WeatherCard'\nimport { WeatherBlock, WeatherTitle, EmptyWeatherBlock, EmptyWeatherIcon, EmptyWeatherPlaceholder } from '../styles'\nimport { WeatherContentWrapper, ArrowControlLeft, ArrowControlRight } from './styles'\nimport { thunkGetWeather, changeWeatherToDisplayAC } from '../../redux/mainPage/actions'\nimport { IWeatherBlockOnSevenDays, IWeatherToDisplay } from '../../types'\nimport { AppStateType } from '../../redux/store'\nimport placeholderIcon from '../../images/placeholder-icon.svg'\n\nconst WeatherBlockOnSevenDays: FC<IWeatherBlockOnSevenDays> = ({ weatherForSevenDays, weatherToDisplay, thunkGetWeather, changeWeatherToDisplayAC }) => {\n  const [position, setPosition] = useState<number>(0)\n  const [city, setCity] = useState<string | undefined>()\n  const isMobile: boolean = useMediaQuery('(max-width: 730px)')\n\n  useEffect(() => {\n    if (city) {\n      thunkGetWeather(city, isMobile)\n      setPosition(0)\n    }\n  }, [city, isMobile]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    changeDisplayWeather()\n  }, [position]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const changeDisplayWeather = (): void => {\n    let weatherToDisplay: Array<IWeatherToDisplay> = []\n\n    if (!isMobile) {\n      weatherToDisplay = weatherForSevenDays.filter((item: object, index: number) => index >= position && index < position + 3)\n    }\n\n    if (isMobile) {\n      weatherToDisplay = [weatherForSevenDays[position]]\n    }\n\n    changeWeatherToDisplayAC(weatherToDisplay)\n  }\n\n  const increasePosition = (): void => {\n    setPosition(position + 1)\n  }\n\n  const reducePosition = (): void => {\n    setPosition(position - 1)\n  }\n\n  const selectCity = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setCity(event.target.value)\n  }\n\n  const disabledBtnOnDesctop: boolean = position === 5 && !isMobile\n  const disabledBtnOnMobile: boolean = position === 7 && isMobile\n  const isCitySelected: boolean = city !== undefined\n\n  return (\n    <WeatherBlock>\n      <WeatherTitle>7 Days Forecast</WeatherTitle>\n      <CitySelect city={city} selectCity={selectCity} isCitySelected={isCitySelected} />\n      {!city\n        ? <EmptyWeatherBlock>\n          <EmptyWeatherIcon src={placeholderIcon}></EmptyWeatherIcon>\n          <EmptyWeatherPlaceholder>Fill in all the fields and the weather will be displayed</EmptyWeatherPlaceholder>\n        </EmptyWeatherBlock>\n        : <WeatherContentWrapper>\n          <ArrowControlLeft disabled={position === 0} onClick={reducePosition} />\n          {weatherToDisplay.map((day: IWeatherToDisplay, index: number) => <WeatherCard key={index} date={day?.date} temp={day?.temp} icon={day?.icon} heightIcon={'115px'} width={'174px'} />)}\n          <ArrowControlRight disabled={disabledBtnOnDesctop || disabledBtnOnMobile} onClick={increasePosition} />\n        </WeatherContentWrapper>\n      }\n    </WeatherBlock>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  weatherForSevenDays: state.mainPage.weatherForSevenDays,\n  weatherToDisplay: state.mainPage.weatherToDisplay\n})\n\nexport default connect(mapStateToProps, { thunkGetWeather, changeWeatherToDisplayAC })(WeatherBlockOnSevenDays)\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n  width: 251px;\n  max-width: 100%;\n  height: 48px;\n  margin-right: 5px;\n  border: 2px solid rgba(128, 131, 164, 0.2);\n  border-radius: 8px;\n  outline: none;\n  font-size: 16px;\n  font-weight: 700;\n  color:#8083A4;\n  padding: 14px 9px 13px 15px;\n  background: rgba(128, 131, 164, 0.06);\n  &:hover {\n    cursor: pointer;\n    border: 2px solid #8083A4;\n  }\n  &:active {\n    border: 2px solid #373AF5;\n  }\n  @media ${'(max-width: 730px)'} {\n    width: 100%;\n    margin-top: 24px;\n  }\n`\n","import React from 'react'\nimport moment from 'moment'\nimport { Input } from './styles'\nimport { IDateInput } from '../../types'\n\nexport const DateInput: React.FC<IDateInput> = ({ selectDate }) => {\n  const startOfAllowedDate: string = moment().add(-5, 'd').format('YYYY-MM-DD')\n  const endOfAllowedDate: string = moment().format('YYYY-MM-DD')\n\n  return (\n    <Input\n      onChange={selectDate}\n      onKeyDown={() => false}\n      type=\"date\"\n      min={startOfAllowedDate}\n      max={endOfAllowedDate}\n      placeholder=\"Select date\"\n      required />\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherSelectBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media ${'(max-width: 730px)'} {\n    flex-direction: column;\n  }\n`\n","import React, { FC, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { DateInput } from '../Input'\nimport { CitySelect } from '../CitySelect'\nimport { WeatherCard } from '../WeatherCard'\nimport { WeatherBlock, WeatherTitle, EmptyWeatherBlock, EmptyWeatherIcon, EmptyWeatherPlaceholder } from '../styles'\nimport { WeatherSelectBlock } from './styles'\nimport { thunkGetWeatherOfDay } from '../../redux/mainPage/actions'\nimport { AppStateType } from '../../redux/store'\nimport { IWeatherBlockOfThePast } from '../../types'\nimport placeholderIcon from '../../images/placeholder-icon.svg'\n\nconst WeatherBlockOfThePast: FC<IWeatherBlockOfThePast> = ({ thunkGetWeatherOfDay, weatherOfDay }) => {\n  const [city, setCity] = useState<string | undefined>()\n  const [date, setDate] = useState<string>('')\n\n  useEffect(() => {\n    if (city && date !== '') {\n      thunkGetWeatherOfDay(city, date)\n    }\n  }, [city, date]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const selectCity = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setCity(event.target.value)\n  }\n\n  const selectDate = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    let dateFromInput: number = new Date(event.target.value).getTime() / 1000\n    dateFromInput = Math.round(dateFromInput)\n    alert(event.target.value)\n\n    setDate(dateFromInput + '')\n  }\n\n  const isCitySelected: boolean = city !== undefined\n\n  return (\n    <WeatherBlock>\n      <WeatherTitle>Forecast for a Date in the Past</WeatherTitle>\n      <WeatherSelectBlock>\n        <CitySelect city={city} selectCity={selectCity} isCitySelected={isCitySelected} />\n        <DateInput selectDate={selectDate} />\n      </WeatherSelectBlock>\n      {!city || date === ''\n        ? <EmptyWeatherBlock>\n          <EmptyWeatherIcon src={placeholderIcon}></EmptyWeatherIcon>\n          <EmptyWeatherPlaceholder>Fill in all the fields and the weather will be displayed</EmptyWeatherPlaceholder>\n        </EmptyWeatherBlock>\n        : <WeatherCard date={date} temp={weatherOfDay.temp} icon={weatherOfDay.icon} heightIcon={'146px'} width={'543px'} />\n      }\n    </WeatherBlock>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  weatherOfDay: state.mainPage.weatherOfDay\n})\n\nexport default connect(mapStateToProps, { thunkGetWeatherOfDay })(WeatherBlockOfThePast)\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n\n`\n\nexport const PageTitle = styled.header`\n  width: 775px;\n  margin: 0 auto 72px auto;\n  @media ${'(max-width: 880px)'} {\n    width: 100%;\n  }\n  @media ${'(max-width: 730px)'} {\n    width: 245px;\n    margin-bottom: 24px;\n  }\n`\n\nexport const PageTitleWord = styled.h1 <{ lineHeight: string, textAlign: string }>`\n  font-weight: bold;\n  font-size: 102px;\n  line-height: ${props => props.lineHeight};\n  text-align: ${props => props.textAlign};\n  @media ${'(max-width: 730px)'} {\n    font-size: 32px;\n    line-height: 32px;\n  }\n`\n\nexport const WeatherBlocksWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media ${'(max-width: 1470px)'} {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nexport const PageFooter = styled.footer`\n  color: #fff;\n  margin-top: 199px;\n  text-align: center;\n  font-size: 14px;\n  line-height: 18px;\n  opacity: 0.6;\n  @media ${'(max-width: 1470px)'} {\n    margin-top: 12px;\n  }\n`\n","import React from 'react'\nimport WeatherBlockOnSevenDays from '../../components/WeatherBlockOnSevenDays'\nimport WeatherBlockOfThePast from '../../components/WeatherBlockOfThePast'\nimport { PageContainer, PageTitle, PageTitleWord, WeatherBlocksWrapper, PageFooter } from './styles'\n\nexport const MainPage = () => {\n  return (\n    <PageContainer>\n      <PageTitle>\n        <PageTitleWord lineHeight={'83px'} textAlign={'left'}>Weather</PageTitleWord>\n        <PageTitleWord lineHeight={'97px'} textAlign={'right'}>forecast</PageTitleWord>\n      </PageTitle>\n      <WeatherBlocksWrapper>\n        <WeatherBlockOnSevenDays />\n        <WeatherBlockOfThePast />\n      </WeatherBlocksWrapper>\n      <PageFooter>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</PageFooter>\n    </PageContainer>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/background-bottom.6be33a07.png\";","export default __webpack_public_path__ + \"static/media/background-top.1b9e0722.png\";","import styled from 'styled-components'\nimport backgroundBottom from './images/background-bottom.png'\nimport backgroundTop from './images/background-top.png'\n\nexport const Container = styled.div`\n  padding: 84px 43px 16px 43px;\n  margin: 0 auto;\n  width: 1440px;\n  background-color: #373AF5;\n  background-image: url(${backgroundBottom}), url(${backgroundTop});\n  background-position: 0% 100%,100% 0%;\n  background-size: 1440px;\n  background-repeat: no-repeat,no-repeat;\n  @media ${'(max-width: 1440px)'} {\n    width: 1280px;\n  }\n  @media ${'(max-width: 1280px)'} {\n    width: 100%;\n  }\n  @media ${'(max-width: 730px)'} {\n    padding: 32px 10px 16px 10px;\n  }\n`\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n","import React, { FC } from 'react'\nimport { MainPage } from './pages/MainPage'\nimport { Container } from './styles'\n\nconst App: FC = () => {\n  return (\n      <Container>\n        <MainPage />\n    </Container>\n  )\n}\n\nexport default App\n","import { GET_WEATHER, CHANGE_WEATHER_TO_DISPLAY, GET_WEATHER_OF_DAY } from './actions'\nimport { IMainPageState, IWeatherOfDay, IWeatherToDisplay } from '../../types'\n\nconst defaultState = {\n  weatherForSevenDays: [] as Array<IWeatherToDisplay>,\n  weatherToDisplay: [] as Array<IWeatherToDisplay>,\n  weatherOfDay: {} as IWeatherOfDay\n}\n\nexport function mainPageReducer (state: IMainPageState = defaultState, action: any): IMainPageState {\n  switch (action.type) {\n    case GET_WEATHER:\n      state = {\n        ...state,\n        weatherForSevenDays: action.weatherForSevenDays,\n        weatherToDisplay: action.weatherToDisplay\n      }\n      break\n\n    case CHANGE_WEATHER_TO_DISPLAY:\n      state = {\n        ...state,\n        weatherToDisplay: action.weatherToDisplay\n      }\n      break\n\n    case GET_WEATHER_OF_DAY:\n      state = {\n        ...state,\n        weatherOfDay: {\n          temp: action.temp,\n          icon: action.icon\n        }\n      }\n      break\n  }\n  return state\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { mainPageReducer } from './mainPage/reducer'\n\nconst reducers = combineReducers({\n  mainPage: mainPageReducer\n})\n\ntype ReducersType = typeof reducers\nexport type AppStateType = ReturnType<ReducersType>\n\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport { createGlobalStyle } from 'styled-components'\n\nconst Global = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;700&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: #fff;\n    line-height: 24px;\n    font-family: Ubuntu;\n  }\n`\n\nReactDOM.render(\n  <Provider store={store}>\n    <Global />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}