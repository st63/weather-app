{"version":3,"sources":["components/CitySelect/styles.tsx","components/CitySelect/index.tsx","components/WeatherCard/styles.tsx","components/WeatherCard/index.tsx","components/styles.tsx","components/WeatherBlockOnSevenDays/styles.tsx","api/index.ts","redux/mainPage/actions.ts","components/WeatherBlockOnSevenDays/index.tsx","components/Input/styles.tsx","components/Input/index.tsx","components/WeatherBlockOfThePast/styles.tsx","components/WeatherBlockOfThePast/index.tsx","pages/MainPage/styles.tsx","pages/MainPage/index.tsx","images/background.jpg","styles.tsx","App.tsx","redux/mainPage/reducer.ts","redux/store.tsx","index.tsx"],"names":["Select","styled","select","Option","option","CitySelect","city","selectCity","value","onChange","placeholder","defaultValue","disabled","WeatherCardInner","div","Date","Degrees","Icon","img","WeatherCard","date","temp","icon","unix","format","locale","src","WeatherBlock","WeatherTitle","h1","WeatherContentWrapper","ArrowControlLeft","button","ArrowControlRight","getWeather","a","axios","get","data","daily","getWeatherOfDay","current","GET_WEATHER","CHANGE_WEATHER_TO_DISPLAY","GET_WEATHER_OF_DAY","getWeatherAC","weatherForSevenDays","weatherToDisplay","type","getWeatherOfDayAC","connect","state","mainPage","thunkGetWeather","isMobile","dispatch","getState","then","res","day","formattedDay","dt","Math","round","weather","push","filter","item","index","changeWeatherToDisplayAC","useState","position","setPosition","setCity","useMediaQuery","useEffect","changeDisplayWeather","disabledBtnOnDesctop","disabledBtnOnMobile","event","target","onClick","map","Input","input","DateInput","selectDate","startOfAllowedDate","moment","add","endOfAllowedDate","onKeyDown","min","max","required","WeatherSelectBlock","weatherOfDay","thunkGetWeatherOfDay","setDate","dateFromInput","getTime","PageContainer","MainPage","Container","Background","background","App","defaultState","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","Global","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0933e025.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Select = styled.select`\n  display: block;\n  font-size: 16px;\n  font-weight: 700;\n  padding: .6em 1.4em .5em .8em;\n  width: 48%;\n  max-width: 100%;\n  border: 1px solid #aaa;\n  border-radius: .5em;\n  outline: none;\n  margin-bottom: 200px;\n  background-color: rgba(204,204,204,0.2);\n  transition: background-color 0.7s ease;\n  &:hover {\n    cursor: pointer;\n    background-color: rgba(204,204,204,0.5);\n  }\n  @media ${'(max-width: 1470px)'} {\n    margin-bottom: 55px;\n  }\n  @media ${'(max-width: 480px)'} {\n    width: 100%;\n  }\n`\n\nexport const Option = styled.option`\n  background-color: #906ca7;\n`\n","import React from 'react'\nimport { Select, Option } from './styles'\nimport { ICitySelect } from '../../types'\n\nexport const CitySelect: React.FC<ICitySelect> = ({ city, selectCity }) => {\n  return (\n    <Select value={city} onChange={selectCity} placeholder=\"Select city\" defaultValue='Select city'>\n      <Option disabled>Select city</Option>\n      <Option value=\"lat=53.19&lon=50.10\">Самара</Option>\n      <Option value=\"lat=53.50&lon=49.42\">Тольятти</Option>\n      <Option value=\"lat=51.53&lon=46.03\">Саратов</Option>\n      <Option value=\"lat=55.79&lon=49.10\">Казань</Option>\n      <Option value=\"lat=45.03&lon=38.97\">Краснодар</Option>\n    </Select>\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherCardInner = styled.div`\n  background-color: rgba(204,204,204,0.2);\n  border-radius: .5em;\n  width: 127px;\n  margin: 0 auto;\n  padding: 10px 14px 0px 14px;\n  text-align: center;\n  @media ${'(max-width: 1470px)'} {\n    width: 180px;\n  }\n`\n\nexport const Date = styled.div`\n  margin: 15px 0px;\n`\n\nexport const Degrees = styled.div`\n  margin: 15px 4px 0px 0px;\n  font-size: 40px;\n`\n\nexport const Icon = styled.img`\n  margin-top: 12px;\n`\n","import React, { FC } from 'react'\nimport Moment from 'react-moment'\nimport 'moment-timezone'\nimport 'moment/locale/ru'\nimport { WeatherCardInner, Date, Degrees, Icon } from './styles'\nimport { IWeatherToDisplay } from '../../types'\n\nexport const WeatherCard: FC<IWeatherToDisplay> = ({ date, temp, icon }) => {\n  return (\n    <WeatherCardInner>\n      <Date><Moment unix format=\"D MMM YYYY\" locale=\"ru\">{date}</Moment></Date>\n      <Degrees>{temp}°C</Degrees>\n      <Icon src={`http://openweathermap.org/img/wn/${icon}.png`} />\n    </WeatherCardInner>\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherBlock = styled.div`\n  width: 48%;\n  @media ${'(max-width: 1470px)'} {\n    width: 100%;\n    margin-bottom: 95px;\n  }\n`\n\nexport const WeatherTitle = styled.h1`\n  margin-bottom: 40px;\n`\n","import styled from 'styled-components'\n\nexport const WeatherContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media ${'(max-width: 1470px)'} {\n    width: 65%;\n    margin: 0 auto;\n  }\n  @media ${'(max-width: 1199px)'} {\n    width: 85%;\n  }\n  @media ${'(max-width: 991px)'} {\n    width: 100%;\n  }\n`\n\nexport const ArrowControlLeft = styled.button`\n  width: 30px; \n  height: 30px; \n  background-color: rgba(204,204,204,0.2);\n  transition: background-color 0.7s ease;\n  margin: auto 0px;\n  border: none;\n  outline: none;\n  border-radius: 3px;\n  &:after {\n    content: '';\n    display: block;\n    border-right: solid #fff;\n    border-top: solid #fff;\n    width: 7px; \n    height: 7px;\n    transform: translate(12px, 0px) rotate(-135deg);\n  }\n  &:hover {\n      cursor: pointer;\n      background-color: rgba(204,204,204,0.5);\n  }\n  @media ${'(max-width: 576px)'} {\n    margin: auto;\n  }\n`\n\nexport const ArrowControlRight = styled.button`\n  width: 30px; \n  height: 30px; \n  background-color: rgba(204,204,204,0.2);\n  transition: background-color 0.7s ease;\n  margin: auto 0px;\n  border: none;\n  outline: none;\n  border-radius: 3px;\n  &:after {\n    content: '';\n    display: block;\n    border-right: solid #fff;\n    border-top: solid #fff;\n    width: 7px; \n    height: 7px;\n    transform: translate(8px, 0px) rotate(45deg);\n  }\n  &:hover {\n      cursor: pointer;\n      background-color: rgba(204,204,204,0.5);\n  }\n  @media ${'(max-width: 576px)'} {\n    margin: auto;\n  }\n`\n","import axios from 'axios'\n\nexport const getWeather = async (city: string) => {\n  const { data } = await axios.get(`https://api.openweathermap.org/data/2.5/onecall?${city}&exclude=current,minutely,hourly,alerts&units=metric&appid=04160438ae6d577745ad287cda3d9bca`)\n\n  return data.daily\n}\n\nexport const getWeatherOfDay = async (city: string, date: string) => {\n  const { data } = await axios.get(`http://api.openweathermap.org/data/2.5/onecall/timemachine?${city}&dt=${date}&units=metric&appid=04160438ae6d577745ad287cda3d9bca`)\n\n  return data.current\n}\n","import { Dispatch } from 'react'\nimport { getWeather, getWeatherOfDay } from '../../api/index'\nimport { AppStateType } from '../store'\nimport { IWeatherToDisplay, IWeatherOfDay, IWeather } from '../../types'\n\nexport const GET_WEATHER = 'GET_WEATHER'\nexport const CHANGE_WEATHER_TO_DISPLAY = 'CHANGE_WEATHER_TO_DISPLAY'\nexport const GET_WEATHER_OF_DAY = 'GET_WEATHER_OF_DAY'\n\nexport const thunkGetWeather = (city: string, isMobile: boolean) => (dispatch: Dispatch<ActionsTypes>, getState: () => AppStateType) => {\n  getWeather(city).then(res => {\n    const weatherForSevenDays: Array<IWeatherToDisplay> = []\n\n    for (const day of res) {\n      const formattedDay = {\n        date: day.dt,\n        temp: Math.round(day.temp.day),\n        icon: day.weather[0].icon\n      }\n\n      weatherForSevenDays.push(formattedDay)\n    }\n\n    let weatherToDisplay: Array<IWeatherToDisplay> = []\n\n    if (!isMobile) {\n      weatherToDisplay = weatherForSevenDays.filter((item: IWeatherToDisplay, index: number) => index < 3)\n    }\n\n    if (isMobile) {\n      weatherToDisplay = [weatherForSevenDays[0]]\n    }\n\n    dispatch(getWeatherAC({ weatherForSevenDays, weatherToDisplay }))\n  })\n}\n\ninterface IgetWeatherAC {\n  type: typeof GET_WEATHER\n  weatherForSevenDays: Array<IWeatherToDisplay>\n  weatherToDisplay: Array<IWeatherToDisplay>\n}\n\nexport const getWeatherAC = ({ weatherForSevenDays, weatherToDisplay }: IWeather): IgetWeatherAC => ({\n  type: GET_WEATHER,\n  weatherForSevenDays,\n  weatherToDisplay\n})\n\n// --------------------------------------------------------------------------------------------\n\ninterface IChangeWeatherToDisplayAC {\n  type: typeof CHANGE_WEATHER_TO_DISPLAY\n  weatherToDisplay: Array<IWeatherToDisplay>\n}\n\nexport const changeWeatherToDisplayAC = (weatherToDisplay: Array<IWeatherToDisplay>): IChangeWeatherToDisplayAC => ({\n  type: CHANGE_WEATHER_TO_DISPLAY,\n  weatherToDisplay\n})\n\n// --------------------------------------------------------------------------------------------\n\nexport const thunkGetWeatherOfDay = (city: string, date: string) => (dispatch: Dispatch<ActionsTypes>, getState: () => AppStateType) => {\n  getWeatherOfDay(city, date).then(res => {\n    const temp: number = Math.round(res.temp)\n    const icon: string = res.weather[0].icon\n\n    dispatch(getWeatherOfDayAC({ temp, icon }))\n  })\n}\n\nexport interface IGetWeatherOfDayAC {\n  type: typeof GET_WEATHER_OF_DAY\n  temp: number\n  icon: string\n}\n\nexport const getWeatherOfDayAC = ({ temp, icon }: IWeatherOfDay): IGetWeatherOfDayAC => ({\n  type: GET_WEATHER_OF_DAY,\n  temp,\n  icon\n})\n\n// --------------------------------------------------------------------------------------------\n\ntype ActionsTypes = IGetWeatherOfDayAC | IChangeWeatherToDisplayAC | IgetWeatherAC\n","import React, { FC, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useMediaQuery } from 'beautiful-react-hooks'\nimport { CitySelect } from '../CitySelect'\nimport { WeatherCard } from '../WeatherCard'\nimport { WeatherBlock, WeatherTitle } from '../styles'\nimport { WeatherContentWrapper, ArrowControlLeft, ArrowControlRight } from './styles'\nimport { thunkGetWeather, changeWeatherToDisplayAC } from '../../redux/mainPage/actions'\nimport { IWeatherBlockOnSevenDays, IWeatherToDisplay } from '../../types'\nimport { AppStateType } from '../../redux/store'\n\nconst WeatherBlockOnSevenDays: FC<IWeatherBlockOnSevenDays> = ({ weatherForSevenDays, weatherToDisplay, thunkGetWeather, changeWeatherToDisplayAC }) => {\n  const [position, setPosition] = useState<number>(0)\n  const [city, setCity] = useState<string | undefined>()\n  const isMobile: boolean = useMediaQuery('(max-width: 768px)')\n\n  useEffect(() => {\n    if (city) {\n      thunkGetWeather(city, isMobile)\n      setPosition(0)\n    }\n  }, [city, isMobile]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    changeDisplayWeather()\n  }, [position]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const changeDisplayWeather = (): void => {\n    let weatherToDisplay: Array<IWeatherToDisplay> = []\n\n    if (!isMobile) {\n      weatherToDisplay = weatherForSevenDays.filter((item: object, index: number) => index >= position && index < position + 3)\n    }\n\n    if (isMobile) {\n      weatherToDisplay = [weatherForSevenDays[position]]\n    }\n\n    changeWeatherToDisplayAC(weatherToDisplay)\n  }\n\n  const increasePosition = (): void => {\n    setPosition(position + 1)\n  }\n\n  const reducePosition = (): void => {\n    setPosition(position - 1)\n  }\n\n  const selectCity = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setCity(event.target.value)\n  }\n\n  const disabledBtnOnDesctop: boolean = position === 5 && !isMobile\n  const disabledBtnOnMobile: boolean = position === 7 && isMobile\n\n  return (\n    <WeatherBlock>\n      <WeatherTitle>Прогноз погоды на 7 дней:</WeatherTitle>\n      <CitySelect city={city} selectCity={selectCity} />\n      {!city\n        ? <div>Fill in all the fields and the weather will be displayed</div>\n        : <WeatherContentWrapper>\n          <ArrowControlLeft disabled={position === 0} onClick={reducePosition} />\n          {weatherToDisplay.map((day: IWeatherToDisplay, index: number) => <WeatherCard key={index} date={day.date} temp={day.temp} icon={day.icon} />)}\n          <ArrowControlRight disabled={disabledBtnOnDesctop || disabledBtnOnMobile} onClick={increasePosition} />\n        </WeatherContentWrapper>\n      }\n    </WeatherBlock>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  weatherForSevenDays: state.mainPage.weatherForSevenDays,\n  weatherToDisplay: state.mainPage.weatherToDisplay\n})\n\nexport default connect(mapStateToProps, { thunkGetWeather, changeWeatherToDisplayAC })(WeatherBlockOnSevenDays)\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n  width: 48%;\n  max-width: 100%;\n  height: 41px;\n  border: 1px solid #aaa;\n  border-radius: .5em;\n  outline: none;\n  font-size: 16px;\n  font-weight: 700;\n  color: #fff;\n  padding: .5em 1.4em .3em 1em;\n  border: 1px solid #cecece;\n  background-color: rgba(204,204,204,0.2);\n  border-radius: .5em;\n  transition: background-color 0.7s ease;\n  &:hover {\n    background-color: rgba(204,204,204,0.5);\n  }\n  &::placeholder {\n    color: #fff;\n  }\n  &:focus::placeholder {\n    opacity: 0;\n    transition: opacity 0.4s ease;\n  }\n  @media ${'(max-width: 480px)'} {\n    width: 100%;\n    margin-bottom: 55px;\n  }\n`\n","import React from 'react'\nimport moment from 'moment'\nimport { Input } from './styles'\nimport { IDateInput } from '../../types'\n\nexport const DateInput: React.FC<IDateInput> = ({ selectDate }) => {\n  const startOfAllowedDate: string = moment().add(-5, 'd').format('YYYY-MM-DD')\n  const endOfAllowedDate: string = moment().format('YYYY-MM-DD')\n\n  return (\n    <Input\n      onChange={selectDate}\n      onKeyDown={() => false}\n      type=\"date\"\n      min={startOfAllowedDate}\n      max={endOfAllowedDate}\n      placeholder=\"Select date\"\n      required />\n  )\n}\n","import styled from 'styled-components'\n\nexport const WeatherSelectBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media ${'(max-width: 480px)'} {\n    flex-direction: column;\n  }\n`\n","import React, { FC, useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { DateInput } from '../Input'\nimport { CitySelect } from '../CitySelect'\nimport { WeatherCard } from '../WeatherCard'\nimport { WeatherBlock, WeatherTitle } from '../styles'\nimport { WeatherSelectBlock } from './styles'\nimport { thunkGetWeatherOfDay } from '../../redux/mainPage/actions'\nimport { AppStateType } from '../../redux/store'\nimport { IWeatherBlockOfThePast } from '../../types'\n\nconst WeatherBlockOfThePast: FC<IWeatherBlockOfThePast> = ({ thunkGetWeatherOfDay, weatherOfDay }) => {\n  const [city, setCity] = useState<string | undefined>()\n  const [date, setDate] = useState<string>('')\n\n  useEffect(() => {\n    if (city && date !== '') {\n      thunkGetWeatherOfDay(city, date)\n    }\n  }, [city, date]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const selectCity = (event: React.ChangeEvent<HTMLSelectElement>): void => {\n    setCity(event.target.value)\n  }\n\n  const selectDate = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    let dateFromInput: number = new Date(event.target.value).getTime() / 1000\n    dateFromInput = Math.round(dateFromInput)\n\n    setDate(dateFromInput + '')\n  }\n\n  return (\n    <WeatherBlock>\n      <WeatherTitle>Какая была погода:</WeatherTitle>\n      <WeatherSelectBlock>\n        <CitySelect city={city} selectCity={selectCity} />\n        <DateInput selectDate={selectDate} />\n      </WeatherSelectBlock>\n      {!city || date === ''\n        ? <div>Fill in all the fields and the weather will be displayed</div>\n        : <WeatherCard date={date} temp={weatherOfDay.temp} icon={weatherOfDay.icon} />\n      }\n    </WeatherBlock>\n  )\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  weatherOfDay: state.mainPage.weatherOfDay\n})\n\nexport default connect(mapStateToProps, { thunkGetWeatherOfDay })(WeatherBlockOfThePast)\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media ${'(max-width: 1470px)'} {\n    flex-direction: column;\n  }\n`\n","import React from 'react'\nimport WeatherBlockOnSevenDays from '../../components/WeatherBlockOnSevenDays'\nimport WeatherBlockOfThePast from '../../components/WeatherBlockOfThePast'\nimport { PageContainer } from './styles'\n\nexport const MainPage = () => {\n  return (\n    <PageContainer>\n      <WeatherBlockOnSevenDays />\n      <WeatherBlockOfThePast />\n    </PageContainer>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/background.cff68206.jpg\";","import styled from 'styled-components'\nimport background from './images/background.jpg'\n\nexport const Container = styled.div`\n  padding: 40px 15px;\n  height: 100vh;\n  margin: 0 auto;\n  width: 1140px;\n  @media ${'(max-width: 1200px)'} {\n    width: 960px;\n  }\n  @media ${'(max-width: 992px)'} {\n    width: 720px;\n  }\n  @media ${'(max-width: 768px)'} {\n    width: 540px;\n  }\n  @media ${'(max-width: 576px)'} {\n    width: auto;\n  }\n`\n\nexport const Background = styled.div`\n  background: url(${background}),rgba(255,255,255,0.3);\n  background-blend-mode: color;\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100vh;\n`\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n","import React, { FC } from 'react'\nimport { MainPage } from './pages/MainPage'\nimport { Container, Background } from './styles'\n\nconst App: FC = () => {\n  return (\n    <Background>\n      <Container>\n        <MainPage />\n      </Container>\n    </Background>\n  )\n}\n\nexport default App\n","import { GET_WEATHER, CHANGE_WEATHER_TO_DISPLAY, GET_WEATHER_OF_DAY } from './actions'\nimport { IMainPageState, IWeatherOfDay, IWeatherToDisplay } from '../../types'\n\nconst defaultState = {\n  weatherForSevenDays: [] as Array<IWeatherToDisplay>,\n  weatherToDisplay: [] as Array<IWeatherToDisplay>,\n  weatherOfDay: {} as IWeatherOfDay\n}\n\nexport function mainPageReducer (state: IMainPageState = defaultState, action: any): IMainPageState {\n  switch (action.type) {\n    case GET_WEATHER:\n      state = {\n        ...state,\n        weatherForSevenDays: action.weatherForSevenDays,\n        weatherToDisplay: action.weatherToDisplay\n      }\n      break\n\n    case CHANGE_WEATHER_TO_DISPLAY:\n      state = {\n        ...state,\n        weatherToDisplay: action.weatherToDisplay\n      }\n      break\n\n    case GET_WEATHER_OF_DAY:\n      state = {\n        ...state,\n        weatherOfDay: {\n          temp: action.temp,\n          icon: action.icon\n        }\n      }\n      break\n  }\n  return state\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { mainPageReducer } from './mainPage/reducer'\n\nconst reducers = combineReducers({\n  mainPage: mainPageReducer\n})\n\ntype ReducersType = typeof reducers\nexport type AppStateType = ReturnType<ReducersType>\n\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\nimport { createGlobalStyle } from 'styled-components'\n\nconst Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: #fff;\n    line-height: 24px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n`\n\nReactDOM.render(\n  <Provider store={store}>\n    <Global />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}